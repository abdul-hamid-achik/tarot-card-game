name: PR Preview Deployment

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build:deps

      - name: Run tests
        run: npm run test

      - name: Build web app
        run: npm run -w @tarot/web build

      - name: Build docs app
        run: npm run -w @tarot/docs build

      - name: Deploy Web App to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          working-directory: ./apps/web
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Docs to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_DOCS_PROJECT_ID }}
          working-directory: ./apps/docs
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment PR with Preview URLs
        uses: actions/github-script@v7
        with:
          script: |
            const webUrl = `https://pr-${{ github.event.number }}.${{ secrets.VERCEL_WEB_PROJECT_ID }}.vercel-preview.app`;
            const docsUrl = `https://pr-${{ github.event.number }}.${{ secrets.VERCEL_DOCS_PROJECT_ID }}.vercel-preview.app`;

            const body = `## ðŸš€ Preview Deployments

            **Web App:** ${webUrl}
            **Documentation:** ${docsUrl}

            These previews will automatically update when you push new changes to this PR.`;

            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(c =>
              c.body.includes('Preview Deployments') && c.user.type === 'Bot'
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
